# topology definition

# name to be used when submitting. This is what shows up...
# in the Storm UI/storm command-line tool as the topology name
# when submitted to Storm
name: "temperature-topology"

# Topology configuration
config:
  # Hint for the number of workers to create
  topology.workers: 1
  # This is really just here to get an base hbase.conf for the bolt.
  # Actual values will be read from the hbase-site.xml file.
  hbase.conf:
    hbase.zookeeper.property.clientport: 2181

# Components 
components:
  # Configure the Event Hub spout
  - id: "eventhubspout-config"
    className: "org.apache.storm.eventhubs.spout.EventHubSpoutConfig"
    constructorArgs:
      # These are populated from the .properties file when the topology is started
      - "${eventhub.read.policy.name}"
      - "${eventhub.read.policy.key}"
      - "${eventhub.namespace}"
      - "${eventhub.name}"
      - ${eventhub.partitions}

  # Define the columns that the HBase-bolt will write
  - id: "column-fields"
    className: "backtype.storm.tuple.Fields"
    constructorArgs:
      - ["timestamp", "temperature"]

  # Create the mapper component that maps tuples to fields in HBase
  - id: "hbase-mapper"
    className: "org.apache.storm.hbase.bolt.mapper.SimpleHBaseMapper"
    configMethods:
      # The field to use as the key value in HBase
      - name: "withRowKeyField"
        args: ["deviceid"]
      # The field(s) to use for columns
      - name: "withColumnFields"
        args: [ref: "column-fields"]
      # The column family
      - name: "withColumnFamily"
        args: ["cf"]

# Spout definitions
spouts:
  - id: "eventhub-spout"
    className: "org.apache.storm.eventhubs.spout.EventHubSpout"
    constructorArgs:
      - ref: "eventhubspout-config"
    # parallelism hint. This should be the same as the number of partitions for your Event Hub
    parallelism: ${eventhub.partitions}

# Bolt definitions
bolts:
  - id: "parser-bolt"
    className: "com.microsoft.examples.ParserBolt"
    parallelism: ${eventhub.partitions}

  - id: "dashboard-bolt"
    className: "com.microsoft.examples.DashboardBolt"
    constructorArgs:
      - "${dashboard.uri}"
    parallelism: ${eventhub.partitions}

  # The bolt that writes to HBase
  - id: "hbase-bolt"
    className: "org.apache.storm.hbase.bolt.HBaseBolt"
    constructorArgs:
      # HBase table name
      - "SensorData"
      # The mapper component
      - ref: "hbase-mapper"
    configMethods:
      - name: "withConfigKey"
        args: ["hbase.conf"]
    parallelism: ${eventhub.partitions}

# Stream definitions
streams:
  - name: "Spout --> Parser" # name isn't used (placeholder for logging, UI, etc.)
    # The stream emitter
    from: "eventhub-spout"
    # The stream consumer
    to: "parser-bolt"
    # Grouping type
    grouping:
      type: SHUFFLE

  - name: "Parser -> Dashboard"
    from: "parser-bolt"
    to: "dashboard-bolt"
    grouping:
      type: FIELDS
      # field(s) to group on
      args: ["deviceid"]

  - name: "Parser -> HBase"
    from: "parser-bolt"
    to: "hbase-bolt"
    grouping:
      # Use a named stream
      streamId: "hbasestream"
      type: FIELDS
      args: ["deviceid"]