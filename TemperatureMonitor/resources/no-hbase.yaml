# topology definition

# name to be used when submitting. This is what shows up...
# in the Storm UI/storm command-line tool as the topology name
# when submitted to Storm
name: "temperature-topology"

# Topology configuration
config:
  # Hint for the number of workers to create
  topology.workers: 1

# Components. Generally constructors or classes used as parameters for bolts and spouts.
components:
  # Configure the Event Hub spout
  - id: "eventhubspout-config"
    className: "org.apache.storm.eventhubs.spout.EventHubSpoutConfig"
    constructorArgs:
      # These are populated from the .properties file when the topology is started
      - "${eventhub.read.policy.name}"
      - "${eventhub.read.policy.key}"
      - "${eventhub.namespace}"
      - "${eventhub.name}"
      - ${eventhub.partitions}

# Spout definitions
spouts:
  - id: "eventhub-spout"
    className: "org.apache.storm.eventhubs.spout.EventHubSpout"
    constructorArgs:
      - ref: "eventhubspout-config"
    # parallelism hint. This should be the same as the number of partitions for your Event Hub, so we read it from the dev.properties file passed at run time.
    parallelism: ${eventhub.partitions}

# Bolt definitions
bolts:
  - id: "parser-bolt"
    className: "com.microsoft.examples.ParserBolt"
    # Keeping with the same number of instances as the spout has partitions
    parallelism: ${eventhub.partitions}

  - id: "dashboard-bolt"
    className: "com.microsoft.examples.DashboardBolt"
    # Pass the URI of the dashboard website
    constructorArgs:
      - "${dashboard.uri}"
    parallelism: ${eventhub.partitions}

# Stream definitions
streams:
  - name: "Spout --> Parser" # name isn't used (placeholder for logging, UI, etc.)
    # The stream emitter
    from: "eventhub-spout"
    # The stream consumer
    to: "parser-bolt"
    # Grouping type
    grouping:
      type: SHUFFLE

  - name: "Parser -> Dashboard"
    from: "parser-bolt"
    to: "dashboard-bolt"
    grouping:
      type: FIELDS
      # field(s) to group on
      args: ["deviceid"]