<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.microsoft.examples</groupId>
  <artifactId>TemperatureMonitor</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>TemperatureMonitor</name>
  <url>http://maven.apache.org</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- This is the version used to pull in patched bits
         from the Hortonworks repository -->
    <storm.version>1.1.0.2.6.1.22-1</storm.version>
    <hadoop.version>2.7.3</hadoop.version>
    <storm.eventhub.version>1.1.0.1</storm.eventhub.version>
  </properties>
 <repositories>
    <!-- This repository contains the Event Hub spout/bolt component -->
    <repository>
      <id>hdinsight-examples</id>
      <url>http://raw.github.com/hdinsight/mvn-repo/master</url>
    </repository>
    <!-- Hortonworks repositories -->
    <!-- These are used to pull in patched Storm bits -->
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
      <id>HDPReleases</id>
      <name>HDP Releases</name>
      <url>http://repo.hortonworks.com/content/repositories/releases/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
      <id>HDPJetty</id>
      <name>Hadoop Jetty</name>
      <url>http://repo.hortonworks.com/content/repositories/jetty-hadoop/</url>
      <layout>default</layout>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>org.apache.storm</groupId>
      <artifactId>storm-core</artifactId>
      <version>${storm.version}</version>
      <!-- keep storm out of the jar-with-dependencies -->
      <scope>provided</scope>
    </dependency>
    <!-- Flux, for YAML based topologies -->
    <dependency>
      <groupId>org.apache.storm</groupId>
      <artifactId>flux-core</artifactId>
      <version>${storm.version}</version>
      <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.zookeeper</groupId>
                    <artifactId>zookeeper</artifactId>
                </exclusion>
            </exclusions>
    </dependency>
    <!-- Used to read from Azure Event Hubs -->
    <dependency>
      <groupId>org.apache.storm</groupId>
      <artifactId>storm-eventhubs</artifactId>
      <version>${storm.eventhub.version}</version>
    </dependency>
    <!-- Used to write to HBase on HDInsight -->
    <dependency>
      <groupId>org.apache.storm</groupId>
      <artifactId>storm-hbase</artifactId>
      <version>${storm.version}</version>
      <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.zookeeper</groupId>
                    <artifactId>zookeeper</artifactId>
                </exclusion>
            </exclusions>
    </dependency>

    <!-- Socket.io client to communicate with the web dashboard -->
    <dependency>
      <groupId>com.github.nkzawa</groupId>
      <artifactId>socket.io-client</artifactId>
      <version>0.4.0</version>
    </dependency>
    <!-- To handle JSON data -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20140107</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer"/>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
            <!-- We're using Flux, so refer to it as main -->
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                <mainClass>org.apache.storm.flux.Flux</mainClass>
            </transformer>
          </transformers>
          <filters>
        <filter>
            <artifact>*:*</artifact>
            <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
            </excludes>
        </filter>
    </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>${basedir}/resources</directory>
        <filtering>false</filtering>
        <includes>
          <!-- logging settings -->
          <include>log4j2.xml</include>
          <!-- Topology definitions -->
          <include>no-hbase.yaml</include>
          <include>with-hbase.yaml</include>
        </includes>
      </resource>
    </resources>
  </build>
</project>
